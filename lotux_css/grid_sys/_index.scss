@use "sass:math";

$grid-columns: 12;

$layout-values: flex-start, flex-end, center, space-between, space-around;

.flex{
    display: flex;
}
.item-center{
    align-items: center;
}

//bases layout classes

.space-full{
    width: 100%;
    box-sizing: border-box;
}
.space{
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.flex-row{
    display: flex;
    flex-flow: row wrap;
    box-sizing: border-box;
}

@each $key, $val in $palet_numbers{
    .gap-#{$key} > * {
        margin: $val;
    }
    /*.gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    } */
}

@each $val in $layout-values{
    .justify-#{$val}{
        justify-content: $val;
    }
}

// col class
@include xs{
    @for $i from 1 through $grid-columns{
        .column-#{$i}-xs{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include sm{
    @for $i from 1 through $grid-columns{
        .column-#{$i}-sm{ 
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include md{
    @for $i from 1 through $grid-columns{
        .column-#{$i}-md{ 
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include lg{
    @for $i from 1 through $grid-columns{
        .column-#{$i}-lg{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
@include xl{
    @for $i from 1 through $grid-columns{
        .column-#{$i}-xl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

.column{
    box-sizing: border-box;
    padding: $base_padding;
}